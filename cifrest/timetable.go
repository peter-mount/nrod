package cifrest

import (
  "github.com/peter-mount/golib/rest"
  "log"
  "strings"
  "time"
)

// TimetableHandler implements a REST endpoint which returns the scheduled
// services at a specific CRS endpoint for a given date and hour of the day.
func (c *CIFRest) TimetableHandler(r *rest.Rest) error {
  crs := r.Var("crs")

  date := r.Var("date")
  loc, err := time.LoadLocation("Europe/London")
  if err != nil {
    r.Status(500)
    log.Printf("500:LoadLocation:%s", err)
    return err
  }

  ts, err := time.ParseInLocation("2006-01-02T15:00", date, loc)
  if err != nil {
    r.Status(500)
    log.Printf("500:ParseInLocation:%s", err)
    return err
  }
  log.Println(ts)

  row := c.dbService.QueryRow("SELECT timetable.timetable( $1, $2 ) AS json", crs, ts)

  var tt []uint8
  err = row.Scan(&tt)
  if err != nil {
    r.Status(500)
    log.Printf("500: crs %s date %s: %s", crs, date, err)
    return err
  }

  // As the JSON is generated by postgreSQL then just write the raw string
  // to the result
  r.Status(200).Reader(strings.NewReader(string(tt)))

  return nil
}
